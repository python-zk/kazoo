name: Kazoo Awesome Testing

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches:
      - master
      - release/*

env:
  TOOLING_PYTHON_VERSION: "3.10"

jobs:
  validate:
    name: Code Validation

    runs-on: ubuntu-latest

    outputs:
      tooling-python-version: ${{ steps.setup-python.outputs.python-version }}

    steps:
      - name: Handle the code
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ env.TOOLING_PYTHON_VERSION }}

      - name: Handle pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install required dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install tox

      - name: Code check
        run: tox -e ${TOX_VENV}
        env:
          TOX_VENV: black,pep8,mypy

  test:
    needs: [validate]

    name: >
      Test Python ${{ matrix.python-version }},
      ZK ${{ matrix.zk-version }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "pypy-3.7"]
        zk-version: ["3.4.14", "3.5.10", "3.6.3", "3.7.1"]
        include:
          - python-version: "3.7"
            tox-env: py37
          - python-version: "3.8"
            tox-env: py38
          - python-version: "3.9"
            tox-env: py39
          - python-version: "3.10"
            tox-env: py310
          - python-version: "pypy-3.7"
            tox-env: pypy3
    steps:
      - name: Handle the code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Handle pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Handle ZK installation cache
        uses: actions/cache@v3
        with:
          path: zookeeper
          key: ${{ runner.os }}-zookeeper
          restore-keys: |
            ${{ runner.os }}-zookeeper

      - name: Install required dependencies
        run: |
          sudo apt-get -y install libevent-dev krb5-kdc krb5-admin-server libkrb5-dev
          python3 -m pip install --upgrade pip
          pip install tox

      - name: Test with tox
        run: tox -e ${TOX_VENV}
        env:
          TOX_VENV: ${{ format('{0}-{1}', matrix.tox-env, 'gevent-eventlet-sasl') }}
          ZOOKEEPER_VERSION: ${{ matrix.zk-version }}
          # TODO: can be removed once tests for ZK 3.4 are removed
          ZOOKEEPER_PREFIX: "${{ !contains(matrix.zk-version, '3.4') && 'apache-' || '' }}"
          ZOOKEEPER_SUFFIX: "${{ !contains(matrix.zk-version, '3.4') && '-bin' || '' }}"
          ZOOKEEPER_LIB: "${{ !contains(matrix.zk-version, '3.4') && 'lib' || '' }}"

      - name: Publish Codecov report
        uses: codecov/codecov-action@v3

  package_and_release:
    name: "Package & release"
    needs: [validate, test]
    uses: ./.github/workflows/release.yml
    with:
      # https://peps.python.org/pep-0440
      TAG_BUILD: -dev0+g${{ github.sha }}.1
      USE_TEST_PYPI: true
      # cant use ${{ env.STUFF }} here...
      PYTHON_VERSION: ${{ needs.validate.outputs.tooling-python-version }}
    secrets:
      TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}